name: Python Robot automation test framework

on:
  push:
  pull_request:

jobs:
  autopep8:
    # Check if the PR is not raised by this workflow and is not from a fork
    if: startsWith(github.head_ref, 'autopep8-patches') == false && github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: autopep8
        id: autopep8
        uses: peter-evans/autopep8@v1
        with:
          args: --exit-code --recursive --in-place --aggressive --aggressive .
      - name: Set autopep8 branch name
        id: vars
        run: echo ::set-output name=branch-name::"autopep8-patches/${{ github.head_ref }}"
      - name: Create Pull Request
        if: steps.autopep8.outputs.exit-code == 2
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: autopep8 action fixes
          title: Fixes by autopep8 action
          body: This is an auto-generated PR with fixes by autopep8.
          labels: autopep8, automated pr
          branch: ${{ steps.vars.outputs.branch-name }}
      - name: Fail if autopep8 made changes
        if: steps.autopep8.outputs.exit-code == 2
        run: exit 1
  robotApi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
#        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]
#        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --show-source --statistics
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install google-chrome-stable
      - name: setup-chromedriver
        run: |
          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ' | cut -d '.' -f 1) \
          && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
          && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_RELEASE/chromedriver_linux64.zip" \
          && cd /tmp \
          && unzip chromedriver_linux64.zip \
          && rm -rf chromedriver_linux64.zip \
          && sudo mv chromedriver /usr/local/bin/chromedriver \
          && sudo chmod +x /usr/local/bin/chromedriver \
          && chromedriver --version
      - name: Show project dir files
        run: |
          echo -------------
          echo $PATH
          echo -------------
          pwd
          echo -------------
          find . -not \( -path "*/.pytest_cache/*" -o -path "./.git/*" -o -path "*/__pycache__/*" -o -path "./.idea/*" \)
          echo -------------
      - name: Run tests
        run: pabot --processes 10 --pythonpath library -d results/ -v BROWSER:${{ secrets.BROWSER }} -v API_KEY:${{ secrets.RAPIDAPI_KEY }} tests/Yauhoo-Finance-*.robot
      - name: Upload tests execution results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: report
          path: |
            results
          if-no-files-found: ignore # 'warn' or 'ignore' are also available, defaults to `warn`
      - name: GitHub Environment Variables Action
        if: ${{ always() }}
        uses: FranzDiebold/github-env-vars-action@v1.2.0
      - name: Robot Reporter
        if: ${{ always() }}
        uses: joonvena/robotframework-reporter-action@v0.1
        env:
          GH_ACCESS_TOKEN: ${{ secrets.TOKEN }}
          REPO_OWNER: ${{ env.GITHUB_REPOSITORY_OWNER }}
          COMMIT_SHA: ${{ github.sha }}
          REPOSITORY: ${{ env.GITHUB_REPOSITORY_NAME }}
          REPORT_PATH: ${GITHUB_WORKSPACE}/results
      - name: Robot Framework
        if: ${{ always() }}
        uses: joonvena/robotframework-docker-action@v0.1
        env:
          BROWSER: ${{ secrets.BROWSER }}
          ROBOT_TESTS_DIR: ${GITHUB_WORKSPACE}/tests
          ROBOT_REPORTS_DIR: ${GITHUB_WORKSPACE}/results

